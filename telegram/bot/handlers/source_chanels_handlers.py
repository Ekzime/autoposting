import logging
import asyncio

# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
from aiogram import Router, F, Bot
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

# –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
from config import settings

# –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
from database.repositories import parsing_source_repository as ps_repo
from database.repositories import posting_target_repository as pt_repo

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

router = Router()

#######################################################################
#                                                                     #
#                    FSM States                                       #
#                                                                     #
#######################################################################
class AddSourceStates(StatesGroup):
    choosing_target_for_source = State() 
    waiting_for_source_identifier = State()
    waiting_for_source_title = State()

class UpdateSourceStates(StatesGroup):
    waiting_for_source_id = State()
    waiting_for_new_identifier = State()
    waiting_for_new_title = State()
    asking_change_target = State()
    waiting_for_new_target = State()

class DeleteSourceStates(StatesGroup):
    waiting_for_source_id = State()
    confirming_deletion = State()

    
#######################################################################
#                                                                     #
#                    Handlers Add Source                              #
#                                                                     #
#######################################################################

@router.message(Command("add_source"))
async def cmd_add_source_command(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_source –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞.
    
    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–æ–º–∞–Ω–¥—É
        state (FSMContext): –û–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    
    –î–µ–π—Å—Ç–≤–∏—è:
        1. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
        3. –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
        4. –ü–µ—Ä–µ–≤–æ–¥–∏—Ç FSM –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    
    Raises:
        Exception: –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    """
    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
    def _sync_get_all_targets():
        return pt_repo.get_all_target_channels()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        targets = await asyncio.to_thread(_sync_get_all_targets)
        
        # –ï—Å–ª–∏ –Ω–µ—Ç —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ - —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        if not targets:
            await message.answer("‚ùå <b>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤</b>\n\n–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª.", parse_mode="HTML")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        targets_list = "\n".join([
            f"üìå <code>{target['id']}</code>: {target['target_title'] or target['target_chat_id']}"
            for target in targets
        ])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ —Å–ø–∏—Å–∫–æ–º –∫–∞–Ω–∞–ª–æ–≤
        await message.answer(
            "üéØ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ ID —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫:\n\n"
            f"{targets_list}\n\n"
            "‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –∫–∞–Ω–∞–ª–∞ —á–∏—Å–ª–æ–º.",
            parse_mode="HTML"
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        await state.set_state(AddSourceStates.choosing_target_for_source)
        
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ add_source: {e}")
        await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.</b>", parse_mode="HTML")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
@router.message(AddSourceStates.choosing_target_for_source)
async def process_target_choice(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞.
    
    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π ID —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        state (FSMContext): –û–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    
    –î–µ–π—Å—Ç–≤–∏—è:
        1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ ID (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º)
        2. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π ID –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
        3. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        4. –ü–µ—Ä–µ–≤–æ–¥–∏—Ç FSM –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    
    Raises:
        ValueError: –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π ID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
        Exception: –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º
    """
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π ID –≤ —á–∏—Å–ª–æ
        target_id = int(message.text)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π ID –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.update_data(chosen_target_id=target_id)
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        await message.answer(
            "üìù <b>–£–∫–∞–∂–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫</b>\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞.\n"
            "–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å:\n"
            "‚Ä¢ username –∫–∞–Ω–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>@channel</code>)\n"
            "‚Ä¢ ID –∫–∞–Ω–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>-100123456789</code>)",
            parse_mode="HTML"
        )
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        await state.set_state(AddSourceStates.waiting_for_source_identifier)
        
    except ValueError:
        # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ - —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
        await message.answer("‚ùå <b>–û—à–∏–±–∫–∞!</b>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ (—á–∏—Å–ª–æ).", parse_mode="HTML")
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")
        await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞.</b>", parse_mode="HTML")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
@router.message(AddSourceStates.waiting_for_source_identifier)
async def process_source_identifier(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞.
    
    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        state (FSMContext): –û–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    
    –î–µ–π—Å—Ç–≤–∏—è:
        1. –ü–æ–ª—É—á–∞–µ—Ç ID —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        2. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        3. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        4. –ü–µ—Ä–µ–≤–æ–¥–∏—Ç FSM –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    
    Raises:
        Exception: –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data = await state.get_data()
        target_id = data['chosen_target_id']
        
        # –û—á–∏—â–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        source_identifier = message.text.strip()
        await state.update_data(source_identifier=source_identifier)
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        await message.answer(
            "üìã <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è\n"
            "(–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '<code>skip</code>')",
            parse_mode="HTML"
        )
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–∂–∏–¥–∞–Ω–∏—é –Ω–∞–∑–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        await state.set_state(AddSourceStates.waiting_for_source_title)
        
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞: {e}")
        await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞.</b>", parse_mode="HTML")
        await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
@router.message(AddSourceStates.waiting_for_source_title)
async def process_source_title(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞.
    
    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        state (FSMContext): –û–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    
    –î–µ–π—Å—Ç–≤–∏—è:
        1. –ü–æ–ª—É—á–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (ID —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞)
        2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (None –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª 'skip')
        3. –î–æ–±–∞–≤–ª—è–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏:
           - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
           - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
           - –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
        5. –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    
    Raises:
        Exception: –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        data = await state.get_data()
        target_id = data['chosen_target_id']
        source_identifier = data['source_identifier']
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (None –µ—Å–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω–æ)
        source_title = None
        if message.text.lower() != 'skip':
            source_title = message.text.strip()
        
        # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        def _add_source_sync():
            return ps_repo.add_source_to_target(
                posting_target_db_id=target_id,
                source_identifier=source_identifier,
                source_title=source_title
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        result = await asyncio.to_thread(_add_source_sync)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        if result == "exists":
            # –ï—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            await message.answer(
                "‚ö†Ô∏è <b>–ò—Å—Ç–æ—á–Ω–∏–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b>\n\n"
                f"–ò—Å—Ç–æ—á–Ω–∏–∫ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º <code>{source_identifier}</code> "
                f"—É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ü–µ–ª–µ–≤–æ–º—É –∫–∞–Ω–∞–ª—É —Å ID <code>{target_id}</code>.\n\n"
                "–î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /update_source",
                parse_mode="HTML"
            )
        elif result:
            # –ï—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω
            await message.answer(
                "‚úÖ <b>–ò—Å—Ç–æ—á–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!</b>\n\n"
                f"üìå –¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª ID: <code>{target_id}</code>\n"
                f"üîç –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞: <code>{source_identifier}</code>\n"
                f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞: <code>{source_title or '–Ω–µ –∑–∞–¥–∞–Ω–æ'}</code>",
                parse_mode="HTML"
            )
        else:
            # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
            await message.answer(
                "‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫</b>\n\n"
                "–í–æ–∑–º–æ–∂–Ω–æ, —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",
                parse_mode="HTML"
            )
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
        await state.clear()
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞: {e}")
        await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞.</b>", parse_mode="HTML")
        await state.clear()

#######################################################################
#                                                                     #
#                    Handlers Update Source                           #
#                                                                     #
#######################################################################
@router.message(Command("update_source"))
async def cmd_update_source(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /update_source –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞.
    
    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–æ–º–∞–Ω–¥—É
        state (FSMContext): –û–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        def _get_all_sources_sync():
            return ps_repo.get_all_sources()
            
        def _get_all_targets_sync():
            return pt_repo.get_all_target_channels()
        
        sources = await asyncio.to_thread(_get_all_sources_sync)
        targets = await asyncio.to_thread(_get_all_targets_sync)
        
        if not sources:
            await message.answer(
                "‚ùå <b>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</b>\n\n"
                "–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add_source",
                parse_mode="HTML"
            )
            return
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∏—Ö ID
        target_names = {}
        for target in targets:
            target_names[target['id']] = target['target_title'] or target['target_chat_id']
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        sources_list = []
        for source in sources:
            target_id = source['posting_target_id']
            target_name = target_names.get(target_id, f"ID: {target_id}")
            
            sources_list.append(
                f"üìå <code>{source['id']}</code>: {source['source_title'] or source['source_identifier']} "
                f"(–¥–ª—è –∫–∞–Ω–∞–ª–∞: <b>{target_name}</b>)"
            )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ —Å–ø–∏—Å–∫–æ–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        await message.answer(
            "üîÑ <b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å:\n\n"
            f"{chr(10).join(sources_list)}\n\n"
            "‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —á–∏—Å–ª–æ–º.",
            parse_mode="HTML"
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        await state.set_state(UpdateSourceStates.waiting_for_source_id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤</b>",
            parse_mode="HTML"
        )

@router.message(UpdateSourceStates.waiting_for_source_id)
async def process_source_id_selection(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ —Å ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ
        if not message.text.isdigit():
            await message.answer(
                "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞</b>\n\n"
                "ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.",
                parse_mode="HTML"
            )
            return
        
        source_id = int(message.text)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(source_id=source_id)
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        await message.answer(
            "üî§ <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞</b>\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä, –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–Ω–∞–ª–∞ –±–µ–∑ —Å–∏–º–≤–æ–ª–∞ @\n"
            "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <code>skip</code>, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä.",
            parse_mode="HTML"
        )
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        await state.set_state(UpdateSourceStates.waiting_for_new_identifier)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞ ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞</b>",
            parse_mode="HTML"
        )
        await state.clear()

@router.message(UpdateSourceStates.waiting_for_new_identifier)
async def process_new_identifier(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data = await state.get_data()
        source_id = data.get("source_id")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥
        if message.text.lower() == "skip":
            new_identifier = None
        else:
            new_identifier = message.text.strip()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(new_identifier=new_identifier)
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        await message.answer(
            "üìù <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞</b>\n\n"
            "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <code>skip</code>, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
            parse_mode="HTML"
        )
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        await state.set_state(UpdateSourceStates.waiting_for_new_title)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞</b>",
            parse_mode="HTML"
        )
        await state.clear()

@router.message(UpdateSourceStates.waiting_for_new_title)
async def process_new_title_and_ask_target(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏ –∑–∞–ø—Ä–æ—Å–∞ –æ —Å–º–µ–Ω–µ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data = await state.get_data()
        source_id = data.get("source_id")
        new_identifier = data.get("new_identifier")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥
        if message.text.lower() == "skip":
            new_title = None
        else:
            new_title = message.text.strip()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(new_title=new_title)
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª
        await message.answer(
            "üîÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞</b>\n\n"
            "–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –¥–ª—è —ç—Ç–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞?\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>yes</code>, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>no</code>, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª",
            parse_mode="HTML"
        )
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        await state.set_state(UpdateSourceStates.asking_change_target)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–∑–≤–∞–Ω–∏—è</b>",
            parse_mode="HTML"
        )
        await state.clear()

@router.message(UpdateSourceStates.asking_change_target)
async def process_change_target_answer(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ —Å–º–µ–Ω–µ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º (yes/no)
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    try:
        answer = message.text.lower().strip()
        
        if answer == "yes":
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
            def _get_all_targets_sync():
                return pt_repo.get_all_target_channels()
                
            targets = await asyncio.to_thread(_get_all_targets_sync)
            
            if not targets:
                await message.answer(
                    "‚ùå <b>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤</b>\n\n"
                    "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞.",
                    parse_mode="HTML"
                )
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞
                await process_update_source(message, state)
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
            targets_list = "\n".join([
                f"üìå <code>{target['id']}</code>: {target['target_title'] or target['target_chat_id']}"
                for target in targets
            ])
            
            await message.answer(
                "üéØ <b>–í—ã–±–æ—Ä –Ω–æ–≤–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞</b>\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ ID –Ω–æ–≤–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞:\n\n"
                f"{targets_list}\n\n"
                "‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –∫–∞–Ω–∞–ª–∞ —á–∏—Å–ª–æ–º.",
                parse_mode="HTML"
            )
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            await state.set_state(UpdateSourceStates.waiting_for_new_target)
        elif answer == "no":
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ö–æ—á–µ—Ç –º–µ–Ω—è—Ç—å —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            await process_update_source(message, state)
        else:
            # –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥
            await message.answer(
                "‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥</b>\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <code>yes</code> –∏–ª–∏ <code>no</code>.",
                parse_mode="HTML"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –æ —Å–º–µ–Ω–µ –∫–∞–Ω–∞–ª–∞: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞</b>",
            parse_mode="HTML"
        )
        await state.clear()

@router.message(UpdateSourceStates.waiting_for_new_target)
async def process_new_target_selection(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ —Å ID –Ω–æ–≤–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ
        if not message.text.isdigit():
            await message.answer(
                "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞</b>\n\n"
                "ID –∫–∞–Ω–∞–ª–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.",
                parse_mode="HTML"
            )
            return
        
        new_target_id = int(message.text)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(new_target_id=new_target_id)
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        await process_update_source(message, state)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ–≤–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ–≤–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞</b>",
            parse_mode="HTML"
        )
        await state.clear()

async def process_update_source(message: Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data = await state.get_data()
        source_id = data.get("source_id")
        new_identifier = data.get("new_identifier")
        new_title = data.get("new_title")
        new_target_id = data.get("new_target_id")  # –ú–æ–∂–µ—Ç –±—ã—Ç—å None, –µ—Å–ª–∏ –∫–∞–Ω–∞–ª –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è
        
        # –ï—Å–ª–∏ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ–ø—É—â–µ–Ω—ã, —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        if new_identifier is None and new_title is None and new_target_id is None:
            await message.answer(
                "‚ÑπÔ∏è <b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>\n\n"
                "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.",
                parse_mode="HTML"
            )
            await state.clear()
            return
        
        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        def _update_source_sync():
            # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª
            if new_target_id is not None:
                # –°–Ω–∞—á–∞–ª–∞ –º–µ–Ω—è–µ–º —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª
                target_change_result = ps_repo.change_target_for_source(
                    source_db_id=source_id,
                    new_target_db_id=new_target_id
                )
                
                if not target_change_result:
                    return False, None, None
            
            # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
            if new_identifier is not None or new_title is not None:
                update_result = ps_repo.update_source(
                    source_db_id=source_id,
                    new_source_identifier=new_identifier,
                    new_source_title=new_title
                )
                
                if not update_result:
                    return False, None, None
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º —Ü–µ–ª–µ–≤–æ–º –∫–∞–Ω–∞–ª–µ, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω
            target_name = None
            if new_target_id is not None:
                targets = pt_repo.get_all_target_channels()
                for target in targets:
                    if target['id'] == new_target_id:
                        target_name = target['target_title'] or target['target_chat_id']
                        break
            
            return True, new_target_id, target_name
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        result = await asyncio.to_thread(_update_source_sync)
        success, updated_target_id, target_name = result
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if success:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
            update_details = []
            if new_identifier:
                update_details.append(f"üîç –ù–æ–≤—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: <code>{new_identifier}</code>")
            if new_title:
                update_details.append(f"üìù –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: <code>{new_title}</code>")
            if updated_target_id:
                update_details.append(f"üéØ –ù–æ–≤—ã–π —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª: <code>{target_name}</code> (ID: {updated_target_id})")
            
            update_info = "\n".join(update_details)
            
            await message.answer(
                f"‚úÖ <b>–ò—Å—Ç–æ—á–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!</b>\n\n"
                f"üìå ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞: <code>{source_id}</code>\n"
                f"{update_info}",
                parse_mode="HTML"
            )
        else:
            await message.answer(
                "‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫</b>\n\n"
                "–í–æ–∑–º–æ–∂–Ω–æ, –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–ª–∏ —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –∏–ª–∏ –Ω–æ–≤—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.",
                parse_mode="HTML"
            )
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
        await state.clear()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞</b>",
            parse_mode="HTML"
        )
        await state.clear()


#######################################################################
#                                                                     #
#                    Handlers Delete Source                           #
#                                                                     #
#######################################################################
@router.message(Command("delete_source"))
async def cmd_delete_source(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /delete_source –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞.
    
    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state (FSMContext): –û–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        def _get_all_sources_sync():
            return ps_repo.get_all_sources()
            
        def _get_all_targets_sync():
            return pt_repo.get_all_target_channels()
        
        sources = await asyncio.to_thread(_get_all_sources_sync)
        targets = await asyncio.to_thread(_get_all_targets_sync)
        
        if not sources:
            await message.answer(
                "‚ùå <b>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è</b>\n\n"
                "–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add_source",
                parse_mode="HTML"
            )
            return
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∏—Ö ID
        target_names = {}
        for target in targets:
            target_names[target['id']] = target['target_title'] or target['target_chat_id']
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        sources_list = []
        for source in sources:
            target_id = source['posting_target_id']
            target_name = target_names.get(target_id, f"ID: {target_id}")
            
            sources_list.append(
                f"üìå <code>{source['id']}</code>: {source['source_title'] or source['source_identifier']} "
                f"(–¥–ª—è –∫–∞–Ω–∞–ª–∞: <b>{target_name}</b>)"
            )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ —Å–ø–∏—Å–∫–æ–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        await message.answer(
            "üóëÔ∏è <b>–£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å:\n\n"
            f"{chr(10).join(sources_list)}\n\n"
            "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ!</b> –£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!\n"
            "‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —á–∏—Å–ª–æ–º.",
            parse_mode="HTML"
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        await state.set_state(DeleteSourceStates.waiting_for_source_id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤</b>",
            parse_mode="HTML"
        )

@router.message(DeleteSourceStates.waiting_for_source_id)
async def process_delete_source_id(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ —Å ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ
        if not message.text.isdigit():
            await message.answer(
                "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞</b>\n\n"
                "ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.",
                parse_mode="HTML"
            )
            return
        
        source_id = int(message.text)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(source_id=source_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        def _get_source_info_sync():
            sources = ps_repo.get_all_sources()
            targets = pt_repo.get_all_target_channels()
            
            source_info = None
            target_name = None
            
            # –ù–∞—Ö–æ–¥–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–æ ID
            for source in sources:
                if source['id'] == source_id:
                    source_info = source
                    break
            
            if source_info:
                # –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
                for target in targets:
                    if target['id'] == source_info['posting_target_id']:
                        target_name = target['target_title'] or target['target_chat_id']
                        break
            
            return source_info, target_name
        
        result = await asyncio.to_thread(_get_source_info_sync)
        source_info, target_name = result
        
        if not source_info:
            await message.answer(
                f"‚ùå <b>–ò—Å—Ç–æ—á–Ω–∏–∫ —Å ID {source_id} –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ ID –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                parse_mode="HTML"
            )
            await state.clear()
            return
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        source_title = source_info['source_title'] or source_info['source_identifier']
        target_info = f"–¥–ª—è –∫–∞–Ω–∞–ª–∞ <b>{target_name}</b>" if target_name else f"–¥–ª—è –∫–∞–Ω–∞–ª–∞ —Å ID {source_info['posting_target_id']}"
        
        await message.answer(
            f"‚ö†Ô∏è <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è</b>\n\n"
            f"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫:\n"
            f"üìå ID: <code>{source_id}</code>\n"
            f"üîç –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: <code>{source_info['source_identifier']}</code>\n"
            f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: <code>{source_title}</code>\n"
            f"üéØ –ö–∞–Ω–∞–ª: {target_info}\n\n"
            f"–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ! –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ:\n\n"
            f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>confirm</code> –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è\n"
            f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>cancel</code> –¥–ª—è –æ—Ç–º–µ–Ω—ã",
            parse_mode="HTML"
        )
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
        await state.set_state(DeleteSourceStates.confirming_deletion)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞ ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞</b>",
            parse_mode="HTML"
        )
        await state.clear()

@router.message(DeleteSourceStates.confirming_deletion)
async def process_delete_confirmation(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    try:
        answer = message.text.lower().strip()
        
        if answer == "confirm":
            # –ü–æ–ª—É—á–∞–µ–º ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            data = await state.get_data()
            source_id = data.get("source_id")
            
            # –£–¥–∞–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫
            def _delete_source_sync():
                return ps_repo.delete_source_by_id(source_id)
            
            success = await asyncio.to_thread(_delete_source_sync)
            
            if success:
                await message.answer(
                    "‚úÖ <b>–ò—Å—Ç–æ—á–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!</b>\n\n"
                    f"–ò—Å—Ç–æ—á–Ω–∏–∫ —Å ID <code>{source_id}</code> –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.",
                    parse_mode="HTML"
                )
            else:
                await message.answer(
                    "‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫</b>\n\n"
                    "–í–æ–∑–º–æ–∂–Ω–æ, –∏—Å—Ç–æ—á–Ω–∏–∫ —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",
                    parse_mode="HTML"
                )
        elif answer == "cancel":
            await message.answer(
                "‚úÖ <b>–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>\n\n"
                "–ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω.",
                parse_mode="HTML"
            )
        else:
            await message.answer(
                "‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥</b>\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <code>confirm</code> –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è\n"
                "–∏–ª–∏ <code>cancel</code> –¥–ª—è –æ—Ç–º–µ–Ω—ã.",
                parse_mode="HTML"
            )
            return
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
        await state.clear()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞</b>",
            parse_mode="HTML"
        )
        await state.clear()


#######################################################################
#                                                                     #
#                    View All Sources                                 #
#                                                                     #
#######################################################################
@router.message(Command("view_all_sources"))
async def cmd_view_all_sources(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /view_all_sources –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞.
    
    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    –î–µ–π—Å—Ç–≤–∏—è:
        1. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        2. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
        3. –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        4. –ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ —Ü–µ–ª–µ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ —Ü–µ–ª–µ–≤—ã–µ –∫–∞–Ω–∞–ª—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        def _get_all_sources_sync():
            return ps_repo.get_all_sources()
            
        def _get_all_targets_sync():
            return pt_repo.get_all_target_channels()
        
        sources = await asyncio.to_thread(_get_all_sources_sync)
        targets = await asyncio.to_thread(_get_all_targets_sync)
        
        if not sources:
            await message.answer(
                "‚ÑπÔ∏è <b>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤</b>\n\n"
                "–î–æ–±–∞–≤—å—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add_source",
                parse_mode="HTML"
            )
            return
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∏—Ö ID
        target_names = {}
        for target in targets:
            target_names[target['id']] = {
                'name': target['target_title'] or target['target_chat_id'],
                'is_active': target['is_active']
            }
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ —Ü–µ–ª–µ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º
        sources_by_target = {}
        for source in sources:
            target_id = source['posting_target_id']
            if target_id not in sources_by_target:
                sources_by_target[target_id] = []
            sources_by_target[target_id].append(source)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ —Ü–µ–ª–µ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º
        message_parts = ["üìã <b>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞</b>\n"]
        
        for target_id, target_sources in sources_by_target.items():
            target_info = target_names.get(target_id, {'name': f"ID: {target_id}", 'is_active': False})
            target_name = target_info['name']
            is_active = target_info['is_active']
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            status_emoji = "‚úÖ" if is_active else "‚ùå"
            message_parts.append(f"\nüéØ <b>–¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª:</b> {target_name} {status_emoji}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            for source in target_sources:
                source_id = source['id']
                source_identifier = source['source_identifier']
                source_title = source['source_title'] or source_identifier
                
                message_parts.append(
                    f"  üìå <code>{source_id}</code>: <b>{source_title}</b> "
                    f"(<code>{source_identifier}</code>)"
                )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
        message_parts.append(
            "\n\n<i>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</i>\n"
            "/add_source - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫\n"
            "/update_source - –∏–∑–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫\n"
            "/delete_source - —É–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer("\n".join(message_parts), parse_mode="HTML")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤</b>",
            parse_mode="HTML"
        )